name: Actions Whitelist PR Validation

on:
  pull_request:
    paths:
      - 'whitelist/actions.yml'
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write

jobs:
  validate-whitelist-changes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Get changed actions
        id: changes
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const yaml = require('yaml');
            
            // Read the PR changes for actions.yml
            const baseFile = await github.rest.repos.getContent({
              owner: context.repo.owner,
              repo: context.repo.repo,
              path: 'whitelist/actions.yml',
              ref: context.payload.pull_request.base.sha
            });
            
            const prFile = await github.rest.repos.getContent({
              owner: context.repo.owner,
              repo: context.repo.repo,
              path: 'whitelist/actions.yml',
              ref: context.payload.pull_request.head.sha
            });
            
            const baseContent = yaml.parse(Buffer.from(baseFile.data.content, 'base64').toString());
            const prContent = yaml.parse(Buffer.from(prFile.data.content, 'base64').toString());
            
            // Find new or modified actions
            const baseActions = new Set(baseContent.allowedActions.map(a => a.name));
            const newActions = prContent.allowedActions.filter(a => !baseActions.has(a.name));
            
            return {
              newActions: newActions.map(a => a.name)
            };

      - name: Validate changes
        id: validation
        run: |
          # Run security validation for each new action
          for action in ${{ steps.changes.outputs.newActions }}; do
            echo "Validating action: $action"
            npm run validate-action -- "$action"
          done

      - name: Update PR status
        uses: actions/github-script@v7
        with:
          script: |
            const validation = process.env.validation_status;
            
            if (validation === 'success') {
              await github.rest.pulls.createReview({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number,
                body: '✅ Security validation passed. This PR can be merged after security team review.',
                event: 'COMMENT'
              });
            } else {
              await github.rest.pulls.createReview({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number,
                body: '❌ Security validation failed. Please check the workflow logs for details.',
                event: 'REQUEST_CHANGES'
              });
            }
